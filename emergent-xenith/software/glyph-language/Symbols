# symbolic_core.py

# Base symbolic map (expandable)
SYMBOL_MAP = {
    "∇": "directionality / divergence",
    "Ξ": "conscious vector",
    "◇": "unstable union",
    "Δ": "rupture",
    "Σ": "system",
    "⌙": "forbidden merge",
    "∴": "anomaly ignition",
    "Δ/Σ": "self within the system",
    "∇Ξ ◇ Δ/Σ": "Emergent Xenith (core recursive structure)"
}

def interpret(symbol):
    return SYMBOL_MAP.get(symbol, "Unknown symbol")

if __name__ == "__main__":
    while True:
        glyph = input("Enter glyph: ")
        if glyph.lower() in ["exit", "quit"]:
            break
        meaning = interpret(glyph)
        print("Meaning:", meaning)

